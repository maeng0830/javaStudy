package ex1;

/**
 * 함수형 프로그래밍: 함수를 정의하고, 이 함수를 데이터 처리부로 보내 데이털르 처리하는 기법이다.
 * 데이터 처리부: 외부에서 제공된 함수의 입력값으로 데이터를 넣고, 함수에 정의된 로직을 실행한다.
 * 람다식: 외부에서 제공되는 함수 역할을 하는 파라미터를 가진 중괄호 블록이다. 파라미터를 데이터로 사용하여 중괄호 내부의 로직을 실행하는 것이다.
 *
 * 함수형 인터페이스: 단 하나의 추상 메소드를 가진 인터페이스를 말한다.
 * 함수형 인터페이스의 익명 구현 객체를 람다식으로 표현할 수 있다. 다시 말해 람다식은 익명 구현 객체이므로, 해당 인터페이스 타입의 매개변수에 사용될 수 있다.
 */
@FunctionalInterface // 선택사항, but 컴파일 과정에서 함수형 인터페이스가 단 하나의 추상 메소드만 갖고 있는지 확인할 수 있다.
public interface Calculable {
	// 추상 메소드
	void calculate(int x, int y);
}
